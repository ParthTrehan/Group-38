---
# Update system
- name: System Update
  apt:
    update_cache: yes
    upgrade: dist

# Install pip
- name: Install pip
  become: yes
  apt:
    name: ['python-pip']
    state: latest
    update-cache: yes
  when: ansible_distribution == "Ubuntu"

# Upgrade pip
- name: Update pip
  become: yes
  pip:
    name: ['pip']
    state: latest

- name: python3
  become: yes
  apt:
    name: ['python3']
    state: latest
    update-cache: yes

- name: Install pip3
  become: yes
  apt:
    name: ['python3-pip']
    state: latest
    update-cache: yes
  when: ansible_distribution == "Ubuntu"

- name: Update python imports
  become: yes
  pip:
    name: ['tweepy','shapely','couchdb','better-profanity','numpy']
    executable: pip3

# Install curl
- name: Install Curl
  become: yes
  apt:
    name: ['curl']
    state: latest
    update-cache: yes

- name: Install git
  become: yes
  apt:
    name: ['git']
    state: latest
    update-cache: yes

# Install couchdb in all 
- name: add couchdb repo
  shell: echo "deb https://apache.bintray.com/couchdb-deb bionic main" \ | sudo tee -a /etc/apt/sources.list

- name: add repo keys
  shell:  curl -L https://couchdb.apache.org/repo/bintray-pubkey.asc \ | sudo apt-key add -

- name: System Update
  apt:
    update_cache: yes
    upgrade: dist

# - name: Copy couchdb debconf
#   copy:
#     src: couchdb_debconf.sh
#     dest: /home/ubuntu/couchdb_debconf.sh

# - name: Execute couchdb debconf
#   shell: sh /home/ubuntu/couchdb_debconf.sh {{ item }}
#   with_items:
#     - "{{ ansible_eth0.ipv4.address }}"

- name: Select couchdb mode
  debconf:
    name: couchdb
    question: couchdb/mode
    value: clustered
    vtype: select

- name: Set couch nodename
  debconf:
    name: couchdb
    question: couchdb/nodename
    value: couchdb@{{ item }}
    vtype: string
  loop:
    - "{{ ansible_eth0.ipv4.address }}"

- name: Set couch cookie
  debconf:
    name: couchdb
    question: couchdb/cookie
    value: couchdb_cluster
    vtype: string

- name: bind couch address
  debconf:
    name: couchdb
    question: couchdb/bindaddress
    value: 0.0.0.0
    vtype: string

- name: Set couch admin password
  debconf:
    name: couchdb
    question: couchdb/adminpass
    value: "{{ COUCHDB_PASSWORD }}"
    vtype: password

- name: Set couch admin password
  debconf:
    name: couchdb
    question: couchdb/adminpass_again
    value: "{{ COUCHDB_PASSWORD }}"
    vtype: password


- name: couchdb seen
  debconf:
    name: couchdb
    question: couchdb/{{ item }}
    value: 'true'
    vtype: seen
  loop:
    - mode
    - nodename
    - cookie
    - bindaddress
    - adminpass
    - adminpass_again
    
# - name: install couchdb 
#   shell: DEBIAN_FRONTEND=noninteractive sudo apt-get install -y --force-yes couchdb

- name: install couchdb on all instances
  apt:    
    name: couchdb
    force: yes
  environment:
    DEBIAN_FRONTEND: noninteractive

- name: changing database directory to volume mount
  lineinfile: 
    dest: /opt/couchdb/etc/local.ini
    line: database_dir=/data


- name: add kernel ports in vm.args
  shell: echo {{item}} >> /opt/couchdb/etc/vm.args
  with_items:
    - "-kernel inet_dist_listen_min 9100"
    - "-kernel inet_dist_listen_min 9100"

# - name: add admin and pass
#   shell: '{{item}}'
#   with_items:
#     - export user=admin
#     - export pass=admin

- name: Setup Build Environment
  apt:
    name: 
      - build-essential 
      - pkg-config 
      - erlang 
      - libicu-dev 
      - libmozjs185-dev 
      - libcurl4-openssl-dev
    state: latest
    install_recommends: no

- name: stop UFW
  shell: 'systemctl stop ufw'
  
- name: disable UFW
  shell: 'systemctl disable ufw'

- name: Create APP Directory
  file: path=/home/ubuntu/deploy state=directory

- name: Git Clone webapp
  git: repo=https://kush0609:kush0887@github.com/parth97/Group-38.git dest=/home/ubuntu/deploy update=yes force=yes
  register: git_finished