---
# Update system
- name: System Update
  apt:
    update_cache: yes
    upgrade: dist

# Install pip
- name: Install pip
  become: yes
  apt:
    name: ['python-pip']
    state: latest
    update-cache: yes
  when: ansible_distribution == "Ubuntu"

# Upgrade pip
- name: Update pip
  become: yes
  pip:
    name: ['pip']
    state: latest

- name: python3
  become: yes
  apt:
    name: ['python3']
    state: latest
    update-cache: yes

- name: Install pip3
  become: yes
  apt:
    name: ['python3-pip']
    state: latest
    update-cache: yes
  when: ansible_distribution == "Ubuntu"

- name: Update python imports
  become: yes
  pip:
    name: ['tweepy','shapely','couchdb','better-profanity','numpy']
    executable: pip3

# Install curl
- name: Install Curl
  become: yes
  apt:
    name: ['curl']
    state: latest
    update-cache: yes

- name: Install git
  become: yes
  apt:
    name: ['git']
    state: latest
    update-cache: yes

# Install couchdb in all 
- name: add couchdb repo
  shell: echo "deb https://apache.bintray.com/couchdb-deb bionic main" \ | sudo tee -a /etc/apt/sources.list

- name: add repo keys
  shell:  curl -L https://couchdb.apache.org/repo/bintray-pubkey.asc \ | sudo apt-key add -

- name: System Update
  apt:
    update_cache: yes
    upgrade: dist

- name: Copy couchdb debconf
  copy:
    src: couchdb_debconf.sh
    dest: /home/ubuntu/couchdb_debconf.sh

- name: Execute couchdb debconf
  shell: sh /home/ubuntu/couchdb_debconf.sh {{ item }}
  with_items:
    - "{{ ansible_eth0.ipv4.address }}"

- name: install couchdb 
  shell: DEBIAN_FRONTEND=noninteractive sudo apt-get install -y --force-yes couchdb

- name: add kernel ports in vm.args
  shell: echo {{item}} >> /opt/couchdb/etc/vm.args
  with_items:
    - "-kernel inet_dist_listen_min 9100"
    - "-kernel inet_dist_listen_min 9100"

- name: add admin and pass
  shell: '{{item}}'
  with_items:
    - export user=admin
    - export pass=admin

- name: Setup Build Environment
  apt:
    name: 
      - build-essential 
      - pkg-config 
      - erlang 
      - libicu-dev 
      - libmozjs185-dev 
      - libcurl4-openssl-dev
    state: latest
    install_recommends: no

- name: stop UFW
  shell: 'systemctl stop ufw'
  
- name: disable UFW
  shell: 'systemctl disable ufw'















# Install miniconda
# - name: Install Conda
#   block:
#     - name: Download Miniconda
#       get_url:
#         url: https://repo.continuum.io/miniconda/Miniconda3-4.5.4-Linux-x86_64.sh
#         dest: /tmp/install-miniconda.sh
#         checksum: md5:a946ea1d0c4a642ddf0c3a26a18bb16d
#         mode: 0550
#     - name: Create conda folder
#       become: True
#       file:
#         path: /opt/miniconda3
#         state: directory
#         owner: ubuntu
#         recurse: yes
#     - name: Run the installer
#       shell: /tmp/install-miniconda.sh -b -u -p /opt/miniconda3
#     - name: Remove the installer
#       file:
#         state: absent
#         path: /tmp/install-miniconda.sh
#     - name: Add miniconda bin to path
#       become: True
#       shell: echo 'export PATH=/opt/miniconda3/bin:$PATH' >> /etc/profile
#     - name: conda - read permission for all
#       become: True
#       file:
#         path: /opt/miniconda3
#         mode: +r
#         recurse: yes
#     - name: conda - execution permission for all
#       become: True
#       file:
#         path: /opt/miniconda3/bin
#         mode: +x
#         recurse: yes